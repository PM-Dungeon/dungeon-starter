plugins {
    id "java"
    id "eclipse"
    id "com.github.spotbugs" version "4.7.9"
    id "com.github.sherter.google-java-format" version "0.9"
}

repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    google()
}

ext {
    gdxVersion = "1.10.0"
}

dependencies {
    implementation "io.github.pm-dungeon:core:1.0.+"

    // LibGDX
    implementation "com.badlogicgames.gdx:gdx:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"

    // JUnit 4, Mockito and Powermock for testing:
    // https://mvnrepository.com/artifact/junit/junit
    testImplementation "junit:junit:4.13.2"

    // https://mvnrepository.com/artifact/org.powermock/powermock-module-junit4
    testImplementation "org.powermock:powermock-module-junit4:2.0.9"
    // https://mvnrepository.com/artifact/org.powermock/powermock-api-mockito2
    testImplementation "org.powermock:powermock-api-mockito2:2.0.9"
}

sourceCompatibility = 17
[compileJava, compileTestJava]*.options*.encoding = "UTF-8"
sourceSets.main.java.srcDirs = ["desktop/src/"]
sourceSets.main.resources.srcDirs = ["assets"]
sourceSets.test.java.srcDirs = ["desktop/test/"]

project.ext.mainClassName = "desktop.DesktopLauncher"
project.ext.assetsDir = new File("assets")

//dist.dependsOn classes
eclipse.project.name = "pmdungeon-desktop"

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    ignoreExitValue = true
    debug = true
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

spotbugs {
    toolVersion = "4.2.2"
    ignoreFailures = true
    showStackTraces = false
}

spotbugsMain {
    reports {
        xml {
            enabled = true
            destination = file("$buildDir/reports/spotbugsXml.xml")
        }
    }
}

googleJavaFormat {
    options style: "AOSP"
}

import com.github.sherter.googlejavaformatgradleplugin.GoogleJavaFormat
import com.github.sherter.googlejavaformatgradleplugin.VerifyGoogleJavaFormat

task format(type: GoogleJavaFormat) {
    source "src/main"
    source "src/test"
    include "**/*.java"
    exclude "**/*Template.java"
}

task verifyFormatting(type: VerifyGoogleJavaFormat) {
    source "src/main"
    include "**/*.java"
    ignoreFailures true
}
